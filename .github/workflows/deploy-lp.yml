name: Deploy LP from Issue

on:
  issues:
    types: [opened]

permissions:
  contents: write
  issues: write

jobs:
  deploy-lp:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, '[DEPLOY]')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0
      
    - name: Extract client name and JSON
      id: extract
      uses: actions/github-script@v6
      with:
        script: |
          const issueTitle = context.payload.issue.title;
          const issueBody = context.payload.issue.body;
          
          const match = issueTitle.match(/\[DEPLOY\]\s*(\w+)/);
          const clientId = match ? match[1].toLowerCase() : 'default';
          
          let jsonData;
          try {
            jsonData = JSON.parse(issueBody);
          } catch (e) {
            throw new Error('JSON inválido no corpo da Issue');
          }
          
          core.setOutput('client_id', clientId);
          core.setOutput('json_data', JSON.stringify(jsonData));
          
    - name: Create LP JSON file
      run: |
        CLIENT_ID="${{ steps.extract.outputs.client_id }}"
        JSON_DATA='${{ steps.extract.outputs.json_data }}'
        
        mkdir -p lps/$CLIENT_ID
        echo "$JSON_DATA" > lps/$CLIENT_ID/lp.json
        echo "$JSON_DATA" > lp.json
        
    - name: Commit and push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Deploy: ${{ steps.extract.outputs.client_id }} - LP criada via Issue #${{ github.event.issue.number }}"
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        
    - name: Close issue with success comment
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: '✅ LP deployed com sucesso! Vercel fará o deploy em alguns minutos.'
          });
          
          await github.rest.issues.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            state: 'closed'
          });
