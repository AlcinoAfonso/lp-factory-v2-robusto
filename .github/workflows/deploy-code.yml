name: Deploy Code from Claude

on:
  workflow_dispatch:
    inputs:
      title:
        description: 'Título do PR'
        required: true
      code_content:
        description: 'Código do Claude'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          BRANCH="claude-$(date +%s)"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          git checkout -b $BRANCH
      
      - name: Process Files
        run: |
          # Salva input
          cat > input.txt << 'EOF'
          ${{ github.event.inputs.code_content }}
          EOF
          
          # Processa com Python
          python3 << 'PYTHON'
          import re
          import os
          
          with open('input.txt', 'r') as f:
              content = f.read()
          
          # Busca arquivos no formato: ```lang path/to/file.ext
          pattern = r'```\w+\s+([\w\-/\.]+)\n(.*?)```'
          matches = re.findall(pattern, content, re.DOTALL)
          
          for path, code in matches:
              os.makedirs(os.path.dirname(path), exist_ok=True) if '/' in path else None
              with open(path, 'w') as f:
                  f.write(code.strip() + '\n')
              print(f"Created: {path}")
          PYTHON
      
      - name: Commit and Push
        run: |
          git add .
          git commit -m "${{ github.event.inputs.title }}" || exit 0
          git push origin $BRANCH
      
      - name: Create PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "${{ github.event.inputs.title }}" \
            --body "Código do Claude deployado automaticamente" \
            --base main \
            --head $BRANCH
