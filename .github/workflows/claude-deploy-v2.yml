name: Claude Deploy V2

on:
  workflow_dispatch:
    inputs:
      titulo:
        description: 'Título do PR'
        required: true
        type: string
      codigo:
        description: 'Cole aqui o código do Claude'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Configurar Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@users.noreply.github.com"
          
      - name: Criar Branch
        id: branch
        run: |
          BRANCH="claude-$(date +%s)"
          echo "name=$BRANCH" >> $GITHUB_OUTPUT
          git checkout -b $BRANCH
          
      - name: Processar Código
        run: |
          # Salva o código do Claude
          cat > input.txt << 'END_OF_INPUT'
          ${{ github.event.inputs.codigo }}
          END_OF_INPUT
          
          # Script Python para extrair arquivos
          python3 << 'PYTHON_SCRIPT'
          import re
          import os
          
          with open('input.txt', 'r') as f:
              content = f.read()
          
          # Procura por: ```linguagem nome-do-arquivo.ext
          pattern = r'```\w+\s+([\w\-/\.]+)\n(.*?)```'
          matches = re.findall(pattern, content, re.DOTALL)
          
          count = 0
          for filepath, code in matches:
              # Cria diretórios se necessário
              dirname = os.path.dirname(filepath)
              if dirname:
                  os.makedirs(dirname, exist_ok=True)
              
              # Salva o arquivo
              with open(filepath, 'w') as f:
                  f.write(code.strip())
              
              print(f"✅ Criado: {filepath}")
              count += 1
          
          print(f"\n📁 Total: {count} arquivos")
          PYTHON_SCRIPT
          
      - name: Commit e Push
        run: |
          git add -A
          git commit -m "${{ github.event.inputs.titulo }}" || echo "Sem alterações"
          git push origin ${{ steps.branch.outputs.name }}
          
      - name: Criar PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "${{ github.event.inputs.titulo }}" \
            --body "🤖 Código deployado via Claude Deploy V2" \
            --base main \
            --head ${{ steps.branch.outputs.name }}
