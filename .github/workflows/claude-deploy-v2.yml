name: Claude Deploy V2

on:
  workflow_dispatch:
    inputs:
      titulo:
        description: "Título do PR"
        required: true
        type: string
      codigo:
        description: "Cole aqui o código do Claude"
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      # 1. Checkout
      - uses: actions/checkout@v4

      # 2. Identidade do bot
      - run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@users.noreply.github.com"

      # 3. Branch novo
      - id: branch
        run: |
          BRANCH="claude-$(date +%s)"
          git checkout -b "$BRANCH"
          echo "name=$BRANCH" >> "$GITHUB_OUTPUT"

      # 4. Converte o input em arquivos
      - name: Processar código
        run: |
          cat > input.txt <<'END'
          ${{ github.event.inputs.codigo }}
          END

          python3 <<'PY'
          import os, re, textwrap, time, mimetypes, pathlib

          txt = open("input.txt").read()

          patterns = [
              #   ```js src/arquivo.js\ncódigo ```
              r'```(\w+)\s+([\w\-/\.]+)\n(.*?)```',
              #   ```js\nsrc/arquivo.js\ncódigo ```
              r'```(\w+)\n([\w\-/\.]+)\n(.*?)```',
              #   ```js\ncódigo ```   (salva como src/code-N.ext)
              r'```(\w+)\n(.*?)```'
          ]

          count = 0
          for pat in patterns:
              for m in re.findall(pat, txt, re.DOTALL):
                  lang, path, code = (m if len(m) == 3 else (m[0], None, m[1]))

                  if not path:  # sem nome → gera default
                      ext = mimetypes.guess_extension(f"text/{lang}") or ".txt"
                      path = f"src/code-{int(time.time())}-{count}{ext}"

                  os.makedirs(os.path.dirname(path) or ".", exist_ok=True)
                  with open(path, "w") as f:
                      f.write(textwrap.dedent(code).strip() + "\n")
                  print("Criado", path)
                  count += 1

              if count:
                  break

          if count == 0:
              open("no-changes.txt", "w").write("Nenhum bloco de código válido recebido.\n")
          PY

      # 5. Mudou algo?
      - id: diff
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      # 6. Commit & push se precisar
      - if: steps.diff.outputs.changed == 'true'
        run: |
          git add -A
          git commit -m "${{ github.event.inputs.titulo }}"
          git push origin "${{ steps.branch.outputs.name }}"

      # 7. PR se precisar
      - if: steps.diff.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "${{ github.event.inputs.titulo }}" \
            --body "Código via Claude Deploy V2" \
            --base main \
            --head "${{ steps.branch.outputs.name }}"

      # 8. Nada mudou → encerra limpo
      - if: steps.diff.outputs.changed == 'false'
        run: echo "Nenhum arquivo novo — PR não criado."
